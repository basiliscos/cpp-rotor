image:
  - Ubuntu2204
#  - Visual Studio 2017 -- conan2 seems not supporting it any longer
#  - Visual Studio 2019
#  - Visual Studio 2022

configuration:
  - Debug
  - Release

environment:
  APPVEYOR_SSH_KEY: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMfXuDqlgFKyyqLiBJT0KEx5wBC/0qgQHE1/jgq7wyQ+ b@zbook"
  PYTHON: "C:\\Python38-x64"
  PY_SCRIPTS: "C:\\Python38-x64\\Scripts"
  APPVEYOR_YML_DISABLE_PS_LINUX: true
  CTEST_OUTPUT_ON_FAILURE: 1
  matrix:
    - SHARED: True
    - SHARED: False

platform:
    - x64

stack: python 3.11

for:
  -
    on_finish:
      - sh: export APPVEYOR_SSH_BLOCK=true
      - sh: curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-ssh.sh' | bash -e -
      - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
    install:
      - cmd: set PATH=%PY_SCRIPTS%;%PATH%
      - cmd: echo %PATH%
      - cmd: "%PYTHON%\\python.exe -m pip install conan cmake"
      - sh: python3 -m pip install conan cmake
      - sh: sudo apt-get update --allow-releaseinfo-change udpate
      - sh: sudo apt-get install -y lcov curl libx11-xcb-dev libfontenc-dev libxaw7-dev libxkbfile-dev libxmu-dev libxmuu-dev libxpm-dev libxres-dev libxt-dev libxv-dev libxxf86vm-dev libxcb-glx0-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev libxcb-cursor-dev libxcb-dri2-0-dev libxcb-dri3-dev libxcb-present-dev libxcb-composite0-dev libxcb-ewmh-dev libxcb-res0-dev libxcb-util0-dev libglu1-mesa-dev
    build_script:
      - cmake --version
      - conan profile detect
    test_script:
      - cmd: cmake -E env ROTOR_BUILD_EXAMPLES=ON CXXFLAGS="/permissive- /wd4251 /W4 /w14640 /wd4068" conan create . -s build_type=%CONFIGURATION% -o shared=%SHARED% -s compiler.cppstd=17 -c tools.build:skip_test=False -o enable_ev=True -o enable_fltk=True -o boost/*:without_chrono=True -o boost/*:without_container=True -o boost/*:without_context=True -o boost/*:without_contract=True -o boost/*:without_coroutine=True  -o boost/*:without_exception=True -o boost/*:without_fiber=True -o boost/*:without_graph=True -o boost/*:without_graph_parallel=True -o boost/*:without_iostreams=True -o boost/*:without_json=True -o boost/*:without_locale=True -o boost/*:without_log=True -o boost/*:without_math=True -o boost/*:without_mpi=True -o boost/*:without_nowide=True  -o boost/*:without_python=True -o boost/*:without_random=True -o boost/*:without_serialization=True -o boost/*:without_stacktrace=True -o boost/*:without_test=True -o boost/*:without_thread=True -o boost/*:without_timer=True -o boost/*:without_type_erasure=True -o boost/*:without_url=True -o boost/*:without_wave=True -o *:shared=True -o util-linux-libuuid/*:with_python_bindings=False --version 0.32 --build=missing
      - sh: env
      - sh: if [ "$CONFIGURATION $SHARED" == "Debug False" ]; then export COVERAGE_FLAGS="-fprofile-arcs -ftest-coverage --coverage"; else export COVERAGE_FLAGS=""; fi
      - sh: echo COVERAGE_FLAGS=$COVERAGE_FLAGS
      - sh: cmake -E env ROTOR_BUILD_EXAMPLES=ON CXXFLAGS="$COVERAGE_FLAGS -Wall -Wextra -Wno-unknown-pragmas -Wnon-virtual-dtor -pedantic -Wcast-align -Woverloaded-virtual -Woverloaded-virtual -Wlogical-op -Wnull-dereference -Wuseless-cast -Wformat=2 -Wduplicated-cond -Wsign-conversion -Wmisleading-indentation" ROTOR_INSPECT_DELIVERY=99 conan create . -s build_type=$CONFIGURATION -o shared=$SHARED -s compiler.cppstd=17 -c tools.build:skip_test=False -o enable_ev=True -o enable_fltk=True -o boost/*:without_chrono=True -o boost/*:without_container=True -o boost/*:without_context=True -o boost/*:without_contract=True -o boost/*:without_coroutine=True  -o boost/*:without_exception=True -o boost/*:without_fiber=True -o boost/*:without_graph=True -o boost/*:without_graph_parallel=True -o boost/*:without_iostreams=True -o boost/*:without_json=True -o boost/*:without_locale=True -o boost/*:without_log=True -o boost/*:without_math=True -o boost/*:without_mpi=True -o boost/*:without_nowide=True  -o boost/*:without_python=True -o boost/*:without_random=True -o boost/*:without_serialization=True -o boost/*:without_stacktrace=True -o boost/*:without_test=True -o boost/*:without_thread=True -o boost/*:without_timer=True -o boost/*:without_type_erasure=True -o boost/*:without_url=True -o boost/*:without_wave=True  -o *:shared=True --version 0.30 --build=missing
    after_test:
      - sh: if [ "$CONFIGURATION $SHARED" == "Debug False" ]; then lcov --directory . --capture --output-file coverage.info && lcov --remove coverage.info '*/tests/*' '*/examples/*'  '/usr/*' --output-file coverage.info.cleaned && rm coverage.info && genhtml -o coverage coverage.info.cleaned && bash <(curl -s https://codecov.io/bash) -X gcov; fi
